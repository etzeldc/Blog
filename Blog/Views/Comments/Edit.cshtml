@model Blog.Models.Comment

<!-- Page Header -->
@{
    var backGroundImage = "/img/HeilRanch.JPG";
    if (Model.BlogPost.MediaUrl != null)
    {
        backGroundImage = Model.BlogPost.MediaUrl;
    }
}
<header class="masthead" style="background-image: url('@backGroundImage')">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="post-heading">
                    <h1>@Model.BlogPost.Title</h1>
                    <h2 class="subheading">@Model.BlogPost.Abstract</h2>
                    @if (Model.BlogPost.Published)
                    {
                        <span class="meta">
                            Posted by <a href="http://davidetzelportfolio.azurewebsites.net" target="_blank">David Etzel</a> on @Model.Created.ToString("MMMM d, yyyy")
                        </span>
                    }
                </div>
            </div>
        </div>
    </div>
</header>

<article>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <h4>Comment Editor</h4>
                <hr />
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.Hidden("slug", Model.BlogPost.Slug)
                    @Html.HiddenFor(model => model.BlogPostId)
                    @Html.HiddenFor(model => model.AuthorId)
                    @Html.HiddenFor(model => model.Created)
                    @Html.HiddenFor(model => model.Updated)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Model.BlogPost.Created
                        </div>
                    </div>
                    <!--if user in mod/admin role that wrote the comment wants to edit, they dont need to provide a reason -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.UpdateReason, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UpdateReason, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UpdateReason, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                            @Html.ActionLink("Back to Post", "Details", "BlogPosts", new { slug = Model.BlogPost.Slug }, new { @class = "btn btn-default" })
                        </div>
                    </div>
                }

                <div>

                </div>
            </div></div></div>
                </article>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
